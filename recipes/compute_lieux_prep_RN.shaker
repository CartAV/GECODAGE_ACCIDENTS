{
  "explorationFilters": [
    {
      "facet": {
        "sort": "count",
        "columnType": "NUMERICAL",
        "column": "pr",
        "currentMode": "ALPHANUM",
        "selectedValues": {},
        "type": "facet"
      },
      "$$hashKey": "SIE",
      "validityFilter": {
        "column": "pr",
        "params": {
          "nok": true,
          "empty": true,
          "ok": true,
          "type": "LongMeaning"
        },
        "type": "validity"
      },
      "alphanumFilter": {
        "values": [],
        "column": "pr",
        "params": {
          "normalization": "exact",
          "mode": "full_string"
        },
        "type": "alphanum"
      },
      "column": "pr",
      "currentMode": "FACET",
      "active": true,
      "type": "columnFilter"
    }
  ],
  "maxProcessedMemTableBytes": -1,
  "analysisColumnData": {},
  "columnsSelection": {
    "mode": "ALL"
  },
  "globalSearchQuery": "",
  "vizSampling": {
    "_refreshTrigger": 0,
    "autoRefreshSample": false
  },
  "origin": "PREPARE_RECIPE",
  "sorting": [],
  "coloring": {
    "individualColumns": [],
    "scheme": "MEANING_AND_STATUS",
    "valueColoringMode": "HASH"
  },
  "steps": [
    {
      "alwaysShowComment": false,
      "preview": false,
      "params": {
        "matching": "PATTERN",
        "stopAfterFirstMatch": false,
        "appliesTo": "SINGLE_COLUMN",
        "normalization": "EXACT",
        "columns": [
          "voie"
        ],
        "mapping": [
          {
            "to": "$1",
            "from": "^0+([0-9]+)"
          }
        ],
        "output": ""
      },
      "type": "FindReplace",
      "disabled": false,
      "metaType": "PROCESSOR"
    },
    {
      "alwaysShowComment": false,
      "preview": false,
      "params": {
        "usePythonUnicode": true,
        "stopOnError": true,
        "column": "voie_normalise",
        "pythonSourceCode": "def process(row):\n    if row[\"catr\"] \u003d\u003d \"autoroute\":\n        res \u003d \"A \"\n    elif row[\"catr\"] \u003d\u003d \"route nationale\":\n        res \u003d \"N \"\n    elif row[\"catr\"] \u003d\u003d \"route d√©partementale\":\n        res \u003d \"D \"\n    else:\n        return \"\"\n    res +\u003d str(row[\"voie\"])\n    if (row[\"v2\"] and not row[\"v2\"].isdigit()):\n        # v2 is supposed to be a letter according to the docs\n        res +\u003d str(row[\"v2\"]).upper()\n    return res",
        "mode": "CELL"
      },
      "type": "PythonUDF",
      "disabled": false,
      "metaType": "PROCESSOR"
    },
    {
      "alwaysShowComment": false,
      "preview": false,
      "params": {
        "matching": "PATTERN",
        "stopAfterFirstMatch": false,
        "appliesTo": "SINGLE_COLUMN",
        "normalization": "EXACT",
        "columns": [
          "pr"
        ],
        "mapping": [
          {
            "to": "$1",
            "from": "([0-9]*)(.[0-9]*)?"
          }
        ],
        "output": ""
      },
      "comment": "les PR doivent etre des entiers",
      "type": "FindReplace",
      "disabled": false,
      "metaType": "PROCESSOR"
    }
  ],
  "exploreUIParams": {
    "autoRefresh": true
  },
  "previewMode": "ALL_ROWS",
  "explorationSampling": {
    "_refreshTrigger": 1,
    "autoRefreshSample": false,
    "selection": {
      "targetRatio": 0.02,
      "maxRecords": 10000,
      "maxStoredBytes": -1,
      "partitionSelectionMethod": "ALL",
      "withinFirstN": -1,
      "samplingMethod": "HEAD_SEQUENTIAL",
      "latestPartitionsN": 1,
      "maxReadUncompressedBytes": -1,
      "filter": {
        "enabled": true,
        "uiData": {
          "conditions": [
            {
              "num": 0.0,
              "col": "catr",
              "input": "pr",
              "string": "41.5",
              "operator": "contains"
            }
          ],
          "mode": "\u0026\u0026"
        },
        "distinct": false
      }
    }
  }
}